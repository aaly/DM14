with io use io
with math use math
~~with sys use sys
with sys use time
with core use Sleep
with io use File
with io use string

link "pthread"

blockTimerInt (variable int, mseconds int->)
{
	USleep(mseconds);
}

main ( -> xx int)
{

nspill(strToFloat("5.5"));

time Time = Time.getCurrentTime();
time.useGMTTime(true);

nspill(time.toString(true, true, true, false));
spill("Time :");
spill(time.getHours());
spill(":");
spill(time.getMinutes());
spill(":");
spill(time.getSeconds());

xxx string = "123;456;789;10";

nspill(str_at(xxx,1));

nspill(getToken(xxx,';',0));
nspill(getToken(xxx,';',1));
~~nspill(getToken(xxx,2));
~~nspill(getToken(xxx,3));
file File;
file.open("test.txt");

~~File.f();

stringg string = file.readLine();
stringg = file.readLine();

nspill(str_size(stringg));
nspill(file.readLine());
nspill(file.readLine());
nspill(file.readLine());

  x channel int = 1;
  f noblock int;
  y recurrent backprop int;
  z float = Cos(55.5);
  str backprop string;
  xa  backprop int[50000];
  
  z++;
  
  ~~|test| testa;
  ~~testa.hello();

  

for   [i int =0; i < 25000; i++;]
  {
    spill ("xa["); spill(i); spill("]="); nspill(xa[i]);
  }
  
  f = 1000;

  
  spill("Y is :"); nspill(y);
  spill("X is :"); nspill(x);
  spill("X is :"); nspill(x);
  spill("X is :"); nspill(x);

  
  nspill(str);
  nspill("N1");
  nspill(str);
  nspill("N2");
  nspill(str);
  nspill("N3");
  nspill(str);
  
  spill("X is :"); nspill(x);
  ~~spill("X is :"); nspill(x);
  spill("Y is :"); nspill(y);
  
  
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  distribute;
  
  
  y = 11;
  
  ~~if [true]
 
 ~~   {
		for [i int =0; i < 25000; i++;]
		{
			xa[i] = Random();
		}
		
		xa[24999] = 1111;
	~~}
	
  
  blockTimerInt(f, 6000);
  spill("F is :"); nspill(f);
  spill("F is :"); nspill(f);
  
  spill("X is :"); nspill(x);
  
  
  x = 2;
  spill("X is :"); nspill(x);
  spill("X is :"); nspill(x);
  ~~spill("X is :"); nspill(x);
  ~~spill("X is :"); nspill(x);
  

  
  nspill(str);
  str = "hello world from node 2 : D";
  nspill(str);
  nspill(str);
  
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  distribute;
  str2 backprop string = "str";
  spill("X is :"); nspill(x);
  x = 3;
  spill("X is :"); nspill(x);
  spill("X is :"); nspill(x);
  
  
	if [ true ]
	{
		if [ z != 0 ]
		{
			spill("Z is :"); nspill(z);
		}
	}
  
  nspill(str2);
  
  str = "hello world from now 3 !";
  
  fork int = Fork();
  
  if [ fork == 0 ]
  {
	nspill("forked");
	nspill(fork);
	x = 10;
  }
  
  nspill("X IS : " );
  nspill(x);
  
  x = (20+Sin(100.0));
  
  return;
}

